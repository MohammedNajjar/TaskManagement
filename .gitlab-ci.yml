image: mcr.microsoft.com/dotnet/sdk:8.0

stages:
  - build
  - test
  - deploy

variables:
  DOCKER_REGISTRY: ${CI_REGISTRY}
  DOCKER_IMAGE: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}
  DOCKER_IMAGE_LATEST: ${CI_REGISTRY_IMAGE}:latest

build:
  stage: build
  script:
    - dotnet restore
    - dotnet build --no-restore
  artifacts:
    paths:
      - TaskManagement.Api/bin/
      - TaskManagement.Api/obj/
    expire_in: 1 hour

test:
  stage: test
  script:
    - dotnet restore
    - dotnet test --no-restore

docker-build:
  stage: deploy
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build -t $DOCKER_IMAGE -t $DOCKER_IMAGE_LATEST .
    - docker push $DOCKER_IMAGE
    - docker push $DOCKER_IMAGE_LATEST
  only:
    - main

deploy-prod:
  stage: deploy
  image: alpine:latest
  script:
    - echo "Deploy to production server"
    # Add your deployment commands here
  environment:
    name: production
  only:
    - main
  when: manual 